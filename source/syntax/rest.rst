reStructuredText 语法
=====================

标题
----

章节标题使用双上划线或双下划线，且符号的长度不能小于文本长度。

章节标题的等级从高到底可划分(参考 `<https://pandoc.org/try/?text=&from=markdown&to=rst>`_ 划分)：

* ``=`` 小章节
* ``-`` 子章节
* ``~`` 子章节的子章节
* ``^`` 子章节的子章节的子章节
* ``'`` 子章节的子章节的子章节的子章节
* ``"`` 段落

段落
----

| 段落使用空行分隔。且对齐是 reST 的操作符，同一段落需要左对齐。  
| 同一段落换行需要使用这个和上面的语句是同一段落。

这个和上面不是同一段落。

内联标记
--------

粗斜体
~~~~~~~

* 星号、反引号：``*text 是斜体*，`这也是是斜体``` -->> “*text 是斜体*，`这也是是斜体`”
* 双星号：``**text 是粗体**`` -->> **text 是粗体** 

代码
~~~~~

**行内代码** 使用双反引号标记，如 ````text 是代码```` -->> ``text 是代码``。

**代码段** 使用 reST 标记 ``::``：在代码模块之前的段落使用 ``::`` 标记。且缩进代码块，使用空行与周围文本分割：

.. sidebar:: 关于 ``::``

  * ``::`` 前边是空白字符时，则会移除标记。
  * ``::`` 前边是非空白时，用一个冒号取代标记。

下面将介绍一段代码::

  这是代码正文。
  这也是代码。

  这是代码的下一段。

代码已经介绍完毕。示例

.. code-block:: restructuredtext

  .. py:function:: fun1()

    Return ……

  .. py:function:: fun2()

    Return ……

看起来是

.. py:function:: fun1()

  Return ……

.. py:function:: fun2()

  Return ……

符号转义
~~~~~~~~

使用反斜杠进行符号转义。

* 星号：``\*text 不是斜体\*`` -->> \*text 不是斜体\*
* 反引号：``\`\`text 不是代码\`\``` --->>> \`\`text 不是代码\`\`

内联标记注意事项
~~~~~~~~~~~~~~~~

.. warning::

  * 不能互相嵌套：``**see :func:`foo`**`` 是错误的`` -->> **see :func:`foo`**
  * 内容前后没有空白：``* text 是错误的*``
  * 使用特殊字符分隔时使用反斜线转义：``thisis\ *one*\ word`` -->> thisis\ *one*\ word.

文本解释角色
------------

.. todo:: 理解文本解释角色。

reST 提供“文本解释角色”，允许以特定方式解释文本。Sphinx 使用这种方式提供语义标记及参考索引，操作符为 ``:rolename:`content```

reST 提供以下规则：

* ``:durole:`emphasis``` —— 写成 ``*emphasis*``
* ``:durole:`strong``` —— 写成 ``**strong**``
* ``:durole:`literal``` —— 写成 ````literal````
* ``:durole:`subscript``` —— 下标
* ``:durole:`superscript``` —— 上标
* ``:durole:`title-reference``` —— 书、期刊等的标题

链接
-----

外部链接
~~~~~~~~


* 文字链接：使用 ```链接文本 <链接地址>`_`` 插入网页链接。如 `链接 1 <https://cn.bing.com/>`_。
* 自动链接：链接文本是网址或电子邮件信箱时，使用 ```<链接地址>`_``。如 `<https://mail.google.com/mail/u/0/>`_。
* 把链接和标签分开。如

  .. code-block:: restructuredtext

    这里是 `链接 2`_。
    中间包含一些文本段落。

    .. _链接 2: https://translate.google.com/

  这里是 `链接 2`_。
  中间包含一些文本段落。

  .. _链接 2: https://translate.google.com/

  .. _inner-link:

内部链接
~~~~~~~~

标准的 reST 支持章节链接，使用 ```章节标题`_``。如返回 `链接`_。

查看 :doc:`/syntax/sphinx-rest` 交叉索引章节。

列表与引用
----------

无序列表
~~~~~~~~

使用一个星号和一个空格。

.. code-block:: restructuredtext

  * 无序列表
  * 无序列表

* 无序列表
* 无序列表

有序列表
~~~~~~~~

使用编号，

.. code-block:: restructuredtext

  1. 使用编号的有序列表
  2. 使用编号的有序列表

1. 使用编号的有序列表
2. 使用编号的有序列表

或者使用井号 ``#.`` 自动加序号。

.. code-block:: restructuredtext

  #. 使用井号的有序列表
  #. 使用井号的有序列表

#. 使用井号的有序列表
#. 使用井号的有序列表

嵌套列表
~~~~~~~~

列表可以嵌套，但是需要用空行分隔字列表和父列表。

.. code-block:: restructuredtext

  * 这是父列表
  * 这也是父列表

    * 这是子列表
    * 这也是子列表

  * 这还是父列表

* 这是父列表
* 这也是父列表

  * 这是子列表
  * 这也是子列表

* 这还是父列表

定义列表
~~~~~~~~

.. todo:: 理解定义列表、引用段落和行模块

表格
----

网格表格
~~~~~~~~

可自定义表格的边框

+------------------------+------------+----------+----------+
| Header row, column 1   | Header 2   | Header 3 | Header 4 |
| (header rows optional) |            |          |          |
+========================+============+==========+==========+
| body row 1, column 1   | column 2   | column 3 | column 4 |
+------------------------+------------+----------+----------+
| body row 2             | ...        | ...      |          |
+------------------------+------------+----------+----------+

简单表格
~~~~~~~~

书写简单，但是有限制：需要有多行，且第一列元素不能分行显示

=====  =====  =======
A      B      A and B
=====  =====  =======
False  False  False
True   False  False
False  True   False
True   True   True
=====  =====  =======

图片
----

图像指令代码如下：

.. code-block:: restructuredtext

  .. image:: image_name
     选项

其中，``image_name`` 必须是图片的相对路径。或者以源目录为根目录的绝对路径。

Sphinx 自动将图片文件拷贝到输出目录的子目录，输出 HTML 时目录为 ``_static``。

选项指的是图片的大小(``width`` 和 ``height``)。

.. image:: /syntax/ref/natsume.jpg

上述文本原文
------------

::

  reStructuredText 语法
  =====================

  章节
  ----

  章节标题使用双上划线或双下划线，且符号的长度不能小于文本长度。

  章节标题的等级从高到底可划分：(参考 `<https://pandoc.org/try/?text=&from=markdown&to=rst>`_ 划分)

  * ``=`` 小章节
  * ``-`` 子章节
  * ``~`` 子章节的子章节
  * ``^`` 子章节的子章节的子章节
  * ``'`` 子章节的子章节的子章节的子章节
  * ``"`` 段落

  段落
  ----

  段落使用空行分隔。且对齐是 reST 的操作符，同一段落需要左对齐。
  这个和上面的语句是同一段落。

  内联标记
  --------

  * 星号、反引号：*text 是斜体*，`这也是是斜体`
  * 双星号：**text 是粗体** 
  * 双反引号：``text 是代码``

  可使用反斜杠进行符号转义。

  * 星号：\*text 不是斜体\*
  * 反引号：\`\`text 不是代码\`\`

  使用标记需要注意：

  * 不能互相嵌套
  * 内容前后没有空白：``* text 是错误的*``
  * 使用特殊字符分隔时使用反斜线转义：thisis\ *one*\ word.

  文本解释角色
  ------------

  reST 提供“文本解释角色”，允许以特定方式解释文本。Sphinx 使用这种方式提供语义标记及参考索引，操作符为 ``:rolename:`content```

  reST 提供以下规则：

  * ``:durole:`emphasis``` —— 写成 ``*emphasis*``
  * ``:durole:`strong``` —— 写成 ``**strong**``
  * ``:durole:`literal``` —— 写成 ````literal````
  * ``:durole:`subscript``` —— 下标
  * ``:durole:`superscript``` —— 上标
  * ``:durole:`title-reference``` —— 书、期刊等的标题

  列表与引用
  ----------

  无序列表
  ~~~~~~~~

  使用一个星号和一个空格。

  * 无序列表
  * 无序列表

  有序列表
  ~~~~~~~~

  使用编号，

  1. 使用编号的有序列表
  2. 使用编号的有序列表

  或者使用井号 ``#.`` 自动加序号。

  #. 使用井号的有序列表
  #. 使用井号的有序列表

  嵌套列表
  ~~~~~~~~

  列表可以嵌套，但是需要用空行分隔字列表和父列表。

  * 这是父列表
  * 这也是父列表

    * 这是子列表
    * 这也是子列表

  * 这还是父列表

  定义列表
  ~~~~~~~~

  源代码
  ------

  在代码模块之前的段落使用 ``::`` 标记。且代码块必须缩进，不同段落的使用空行与周围文本分割：

  下面将介绍一段代码::

    这是代码正文。
    这也是代码。

    这是代码的下一段。

  代码已经介绍完毕。

  表格
  ----

  网格表格
  ~~~~~~~~

  可自定义表格的边框

  +------------------------+------------+----------+----------+
  | Header row, column 1   | Header 2   | Header 3 | Header 4 |
  | (header rows optional) |            |          |          |
  +========================+============+==========+==========+
  | body row 1, column 1   | column 2   | column 3 | column 4 |
  +------------------------+------------+----------+----------+
  | body row 2             | ...        | ...      |          |
  +------------------------+------------+----------+----------+

  简单表格
  ~~~~~~~~

  书写简单，但是有限制：需要有多行，且第一列元素不能分行显示

  =====  =====  =======
  A      B      A and B
  =====  =====  =======
  False  False  False
  True   False  False
  False  True   False
  True   True   True
  =====  =====  =======

  超链接
  ------

  .. _outer-link:

  外部链接
  ~~~~~~~~

  使用 ```链接文本 <链接地址>`_`` 插入网页链接。如 `链接1 <https://cn.bing.com/>`_。

  链接文本是网址的可以不用写。如 `<https://mail.google.com/mail/u/0/>`_。

  可以把链接和标签分开：

    链接和文本分开的写法 `链接2`_

    .. _链接2: https://translate.google.com/

  内部链接
  ~~~~~~~~

  标准的 reST 支持章节链接，```章节标题`_``。返回 `超链接`_。

  Sphinx reST 角色 ``:ref:`` 是交叉索引，也可以实现章节链接。

  在文档任意位置都可以使用交叉索引，但文档条目标签要求是唯一的。有两种方式

  * 标签直接放在章节标题前面，并通过 ``:ref:`lable_name``` 引用。返回 :ref:`outer-link`

    ``:ref:`` 角色会产生该章节的链接，链接标题是“交叉引用章节”。章节与索引可在不同的源文件。

  * 标签不放在章节前面的，需要给出明确的链接，``:ref:`Link title <lable_name>`_``。

  推荐使用 Sphinx 的 ``:ref:`` 橘色，因为可以跨文件，且即使文章标题变化，生成器仍支持这些索引。

  查看 :doc:`/source/syntax/sphinx-rest` 测试跨文档链接。

  图片
  ----
